- id: '62'
  alias: 'Ingrids bedroom active'
  trigger:
    - platform: state
      entity_id: binary_sensor.morning, binary_sensor.day, binary_sensor.evening, binary_sensor.night
    - platform: state
      entity_id: input_select.home_state
      to: 'Home'
    - platform: numeric_state
      entity_id: sensor.ingrid_bedroom_motion_sensor_luminance
      below: 180
      for:
        seconds: 120
    - platform: state
      entity_id: input_boolean.sleep_state_ingrid
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.home_state
        state: 'Home'
      - condition: state
        entity_id: input_boolean.sleep_state_ingrid
        state: 'off'
      - condition: state
        entity_id: binary_sensor.sleep_state
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.ingrid_bedroom_motion_sensor_luminance
        below: 200
  action:
    - service: switch.turn_on
      entity_id: switch.ingrid_flux
    - service: light.turn_on
      entity_id: light.ingrid_bedroom_ceiling_light_level, light.ingrid_bedroom_bed_light_level
      data_template:
        brightness_pct: >
          {%- if is_state('binary_sensor.morning', 'on') %}
            75
          {%- elif is_state('binary_sensor.day', 'on') %}
            100
          {%- elif is_state('binary_sensor.evening', 'on') %}
            35
          {%- else %}
            20
          {%- endif %}

- id: '58'    
  alias: 'Ingrids bedroom sleeping'
  trigger:
    - platform: state
      entity_id: input_boolean.sleep_state_ingrid
      to: 'on'
  action:
    - service: switch.turn_off
      entity_id: switch.ingrid_flux
    - service: light.turn_off
      entity_id: light.ingrid_bedroom_ceiling_light_level 
    - service: light.turn_on
      entity_id: light.ingrid_bedroom_bed_light_level
      data:
        brightness: 35
        rgb_color: [255, 64, 0]

- id: '63'    
  alias: 'Ingrids bedroom off'
  trigger:
    - platform: state
      entity_id: binary_sensor.sleep_state
      to: 'on'
    - platform: state
      entity_id: input_select.home_state
      to: 'Away'
    - platform: numeric_state
      entity_id: sensor.ingrid_bedroom_motion_sensor_luminance
      above: 200
      for:
        seconds: 120
  action:
    - service: switch.turn_off
      entity_id: switch.ingrid_flux
    - service: light.turn_off
      entity_id: light.ingrid_bedroom_ceiling_light_level, light.ingrid_bedroom_bed_light_level

#- id: '71'
#  alias: 'Pre-wakeup alarm Ingrid'
#  trigger:
#    platform: state
#    entity_id: sensor.time
#  condition:
#    condition: and
#    conditions:
#      - condition: state
#        entity_id: input_select.home_state
#        state: 'Home'
#      - condition: state
#        entity_id: input_boolean.sleep_state_ingrid
#        state: 'on'
#      - condition: template
#        value_template: '{{(now().strftime("%s") | int +900) | timestamp_custom("%H:%M")  == "%0.02d:%0.02d" | format(states.input_datetime.alarm_time_ingrid.attributes.hour | int, states.input_datetime.alarm_time_ingrid.attributes.minute | int)}}'
#      - condition: template
#        value_template: '{{(is_state("input_boolean.alarm_workday_ingrid", "on") and is_state("binary_sensor.workday_sensor", "on")) or is_state("input_boolean.alarm_workday_ingrid","off")}}'
#      - condition: state
#        entity_id: input_boolean.alarm_override_ingrid
#        state: 'off'
#  action:
#    - service: python_script.transition_light
#      data:
#        entity_id: light.ingrid_bedroom_ceiling_light_level
#        transition: 900
#        brightness: 255
 
- id: '82'
  alias: 'Wakeup alarm Ingrid'
  trigger:
    platform: state
    entity_id: sensor.time
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.home_state
        state: 'Home'
      - condition: state
        entity_id: input_boolean.sleep_state_ingrid
        state: 'on'
      - condition: template
        value_template: '{{states.sensor.time.state == "%0.02d:%0.02d" | format(states.input_datetime.alarm_time_ingrid.attributes.hour | int, states.input_datetime.alarm_time_ingrid.attributes.minute | int)}}'
      - condition: template
        value_template: '{{(is_state("input_boolean.alarm_workday_ingrid", "on") and is_state("binary_sensor.workday_sensor", "on")) or is_state("input_boolean.alarm_workday_ingrid","off")}}'
      - condition: state
        entity_id: input_boolean.alarm_override_ingrid
        state: 'off'
  action:
    - service: automation.trigger
      data:
        entity_id: automation.ingrid_awake

- id: '64'
  alias: 'Ingrid sleeping'
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.ingrid_bedroom_ceiling_light
      scene_id: 11
  condition:
    condition: time
    after: '19:00:00'
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.sleep_state_ingrid
    - service: cover.close_cover
      entity_id: cover.ingrid_bedroom_blind

- id: '65'
  alias: 'Ingrid awake'
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.ingrid_bedroom_ceiling_light
      scene_id: 10
  condition:
    condition: and
    conditions:
      - condition: time
        after: '05:00:00'
      - condition: time
        before: '19:00:00'
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.sleep_state_ingrid
    - service: cover.open_cover
      entity_id: cover.ingrid_bedroom_blind

